apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ppu-exporter-mock
  namespace: ppu-system
  labels:
    app: ppu-exporter-mock
    component: exporter
spec:
  selector:
    matchLabels:
      app: ppu-exporter-mock
      component: exporter
  template:
    metadata:
      labels:
        app: ppu-exporter-mock
        component: exporter
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      hostNetwork: true
      hostPID: false
      containers:
      - name: ppu-exporter
        image: IMAGE_PLACEHOLDER
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
          hostPort: 8080
        args:
        - "--node-name=$(NODE_NAME)"
        - "--node-pool-id=default"
        - "--pod-source=ecs"
        - "--port=8080"
        - "--gpu-count=16"
        - "--driver-version=1.5.1-1d747a"
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /metrics
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /metrics
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          privileged: true
          readOnlyRootFilesystem: false
      restartPolicy: Always
      nodeSelector:
        ppu: "on"
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule